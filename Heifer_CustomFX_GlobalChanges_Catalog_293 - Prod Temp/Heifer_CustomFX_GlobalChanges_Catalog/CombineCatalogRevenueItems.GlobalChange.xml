<GlobalChangeSpec 
	xmlns="bb_appfx_globalchange"  
	xmlns:common="bb_appfx_commontypes"
	ID="bf6b1787-b8fb-4040-a2b5-10a5fe110835"
	Name="Combine Catalog Revenue Items Global Change"
	Description="Combine Catalog Revenue Items Global Change (prevent duplicate line items, mainly after kit conversions)"
	Author="HEIFERNET\khamling"
	DisplayName="Combine Catalog Revenue Items Global Change"
	GlobalChangeFolder="Revenue"
	SPName="USR_USP_GLOBALCHANGE_COMBINECATALOGREVENUEITEMS"
>

    <!-- describe the SP that performs the global change operation -->
    <CreateProcedureSQL>
      <![CDATA[
create procedure dbo.USR_USP_GLOBALCHANGE_COMBINECATALOGREVENUEITEMS
(
	@CHANGEAGENTID uniqueidentifier = null,
	@ASOF as datetime = null,
	@NUMBERADDED int = 0 output,
	@NUMBEREDITED int = 0 output,
	@NUMBERDELETED int = 0 output,
  @REVENUESELECTIONID UNIQUEIDENTIFIER
)
as			
	set nocount off;
	
  declare @I_MAX integer
	declare @CURRENTDATE datetime
	set @CURRENTDATE = getdate();
	set @NUMBERADDED = 0;
	set @NUMBEREDITED = 0;
	set @NUMBERDELETED = 0; 
	
	if @CHANGEAGENTID is null
		exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output;
					
	begin try
		-- do the global change operation here, and set @NUMBERADDED, @NUMBEREDITED, and/or @NUMBERDELETED as appropriate
      DECLARE @REVENUESELECTION TABLE (id UNIQUEIDENTIFIER PRIMARY KEY); 

      INSERT INTO @REVENUESELECTION 
      SELECT id 
      FROM   dbo.Ufn_idsetreader_getresults_guid(@REVENUESELECTIONID) 
      
     declare @T table
    (
      PK int identity(1,1), 
      REVENUEID uniqueidentifier
    )
    declare @I int = 1
    
    insert into @T 
	    select ID
      from @REVENUESELECTION SelectionResults
	    
    select @I_MAX = count(*) from @T
    
    declare @REVENUEID uniqueidentifier

		--BEGIN LOOPING THROUGH TABLE DEFINED ABOVE 
    while @I <= @I_MAX
	  begin  
    		select 
          @REVENUEID = REVENUEID
          from 
            @T 
          where 
            PK = @I      
        
          declare @dupsfound integer

          select @dupsfound = 1
          from
            usr_catalogrevenue where revenueid=@REVENUEID
            and catalogitemattributeid not in (select id from usr_catalogitemattribute where unit like  '%Extra Gift Card%')
          group by
            transactionid, catalogitemattributeid, price, fairmarket,fulfilled,revenueid,addressid,shiptoname,taxamount,
            catalogitemid,catalogtypeid,fromname,shiptofirstname,shiptolastname,shiptoaddress1,shiptoaddress2,shiptocity,shiptostateid,
            shiptocountryid,shiptozip,shippingoption,shippingprice,shippingattention,shippinginstructions,personalnote,
            shippingpriceactual,shipdate,isshipped,trackingnumber,fulfillmentnumber,processeddate,ftpdate,pbdimportdate,pbddistributioncenter,
            pbdinvoiceddate,associatedgifts,email,theme,image,sourcedoclocation,registry,toname,processedtime,ftptime,pbdimporttime,pbdinvoicedtime,
            certname,certpersonalization1,certpersonalization2,certpersonalization3,certpersonalization4
          having count(*)>1
  
          if @dupsfound is not null
          begin
            declare @COMBINEITEMSDATE datetime
            set @COMBINEITEMSDATE = getdate()
    
            insert into usr_catalogrevenue
            (
            transactionid,catalogitemattributeid, quantity,price,fairmarket, addedbyid,changedbyid, dateadded, datechanged,fulfilled,revenueid,addressid,shiptoname,taxamount,
            catalogitemid,catalogtypeid,fromname,shiptofirstname,shiptolastname,shiptoaddress1,shiptoaddress2,shiptocity,shiptostateid,
            shiptocountryid,shiptozip,shippingoption,shippingprice,shippingattention,shippinginstructions,personalnote,
            shippingpriceactual,shipdate,isshipped,trackingnumber,fulfillmentnumber,processeddate,ftpdate,pbdimportdate,pbddistributioncenter,
            pbdinvoiceddate,associatedgifts,email,theme,image,sourcedoclocation,registry,toname,processedtime,ftptime,pbdimporttime,pbdinvoicedtime,
            certname,certpersonalization1,certpersonalization2,certpersonalization3,certpersonalization4
            )
            (
            select 
              transactionid,catalogitemattributeid,sum(quantity),price,fairmarket, addedbyid,changedbyid, @COMBINEITEMSDATE, @COMBINEITEMSDATE,fulfilled,revenueid,addressid,shiptoname,taxamount,
              catalogitemid,catalogtypeid,fromname,shiptofirstname,shiptolastname,shiptoaddress1,shiptoaddress2,shiptocity,shiptostateid,
              shiptocountryid,shiptozip,shippingoption,shippingprice,shippingattention,shippinginstructions,personalnote,
              shippingpriceactual,shipdate,isshipped,trackingnumber,fulfillmentnumber,processeddate,ftpdate,pbdimportdate,pbddistributioncenter,
              pbdinvoiceddate,associatedgifts,email,theme,image,sourcedoclocation,registry,toname,processedtime,ftptime,pbdimporttime,pbdinvoicedtime,
              certname,certpersonalization1,certpersonalization2,certpersonalization3,certpersonalization4
            from
              usr_catalogrevenue where revenueid=@REVENUEID
              and catalogitemattributeid not in (select id from usr_catalogitemattribute where unit like  '%Extra Gift Card%')
            group by
              transactionid,catalogitemattributeid,price,fairmarket, addedbyid,changedbyid,fulfilled,revenueid,addressid,shiptoname,taxamount,
              catalogitemid,catalogtypeid,fromname,shiptofirstname,shiptolastname,shiptoaddress1,shiptoaddress2,shiptocity,shiptostateid,
              shiptocountryid,shiptozip,shippingoption,shippingprice,shippingattention,shippinginstructions,personalnote,
              shippingpriceactual,shipdate,isshipped,trackingnumber,fulfillmentnumber,processeddate,ftpdate,pbdimportdate,pbddistributioncenter,
              pbdinvoiceddate,associatedgifts,email,theme,image,sourcedoclocation,registry,toname,processedtime,ftptime,pbdimporttime,pbdinvoicedtime,
              certname,certpersonalization1,certpersonalization2,certpersonalization3,certpersonalization4
            )
  
            --get rid of records before combined rows were inserted
            delete from usr_catalogrevenue where revenueid=@REVENUEID
            and catalogitemattributeid not in (select id from usr_catalogitemattribute where unit like  '%Extra Gift Card%')
            and dateadded < @COMBINEITEMSDATE
            
            --set @NUMBEREDITED = @NUMBEREDITED + @@ROWCOUNT;
            set @NUMBEREDITED = @NUMBEREDITED + 1 ;  --use +1 here instead of rowcount since we want to see number of revenue transactions affected, not # of usr_catalogrevenue records
            
          end
    	    set @I = @I + 1   		
         --END LOOPING THROUGH TABLE DEFINED ABOVE
     end		
	end try
  
  begin catch
		exec dbo.USP_RAISE_ERROR
		return 1
  end catch
          
   
		]]>
    </CreateProcedureSQL>

    <ParametersFormMetaData>

      <!-- describe fields on the parameter form, which correspond to parameters on the SP.  Note that system parameters 
		like the context @CHANGEAGENTID, @ASOF, @NUMBERADDED, @NUMBEREDITED, and @NUMBERDELETED need not be listed. -->
      <FormMetaData xmlns="bb_appfx_commontypes">
        <FormFields>
          <common:FormField FieldID="REVENUESELECTIONID" Caption="Revenue Selection" DataType="Guid" Required="true" >
            <common:SearchList SearchListID="1F0E603C-1C55-4E1E-8218-BDB877B2CBE8">
            </common:SearchList>
          </common:FormField>
        </FormFields>

        <common:WebUIComponent>
          <common:WebUI>
            <common:DefaultWebUI />
          </common:WebUI>
        </common:WebUIComponent>

      </FormMetaData>
    </ParametersFormMetaData>

  </GlobalChangeSpec>
