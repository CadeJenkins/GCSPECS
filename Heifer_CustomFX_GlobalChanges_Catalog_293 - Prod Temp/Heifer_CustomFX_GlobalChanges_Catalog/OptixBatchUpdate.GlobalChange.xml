  <GlobalChangeSpec
    xmlns="bb_appfx_globalchange"
    xmlns:common="bb_appfx_commontypes"
    ID="366d384e-9a82-4f4c-ad0d-8e0393d58504"
    Name="Update Optix Batch Number"
    Description="Update BBEC Batch Number, Projected Totals, Projected Number based on Optix Batch data"
    Author="HEIFERNET\khamling"
    DisplayName="Update Optix Batch Number"
    GlobalChangeFolder="Batch"
    SPName="USP_GLOBALCHANGE_OPTIXBATCHUPDATE"
>

    <!-- describe the SP that performs the global change operation -->
    <CreateProcedureSQL>
      <![CDATA[
create procedure dbo.USP_GLOBALCHANGE_OPTIXBATCHUPDATE
(
	@CHANGEAGENTID uniqueidentifier = null,
	@ASOF as datetime = null,
	@NUMBERADDED int = 0 output,
	@NUMBEREDITED int = 0 output,
	@NUMBERDELETED int = 0 output,
  @BATCHSELECTIONID UNIQUEIDENTIFIER
)
as			
	set nocount off;
	
	declare @CURRENTDATE datetime
	set @CURRENTDATE = getdate();
	set @NUMBERADDED = 0;
	set @NUMBEREDITED = 0;
	set @NUMBERDELETED = 0; 
	
	if @CHANGEAGENTID is null
		exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output;
    
    DECLARE @ADDEDBYID varchar(50)
		SET @ADDEDBYID = @changeagentid
					
	begin try
		-- do the global change operation here, and set @NUMBERADDED, @NUMBEREDITED, and/or @NUMBERDELETED as appropriate
		
      DECLARE @BATCHSELECTION TABLE ( 
        id UNIQUEIDENTIFIER PRIMARY KEY); 

      INSERT INTO @BATCHSELECTION
      SELECT id 
      FROM   dbo.Ufn_idsetreader_getresults_guid(@BATCHSELECTIONID) 
      
      DECLARE @ATTRTABLE VARCHAR(100);
      DECLARE @ATTRTABLEPROJTOTAL VARCHAR(100);
      DECLARE @ATTRTABLEPROJNUM VARCHAR(100);
      DECLARE @SQL VARCHAR(2000);
      DECLARE @UPDATESQL VARCHAR(2000);
      --SET @ATTRTABLE = 'BATCHATTRIBUTE21091C6D9DDC4A3F9D58BA07C6B23A00'
      
       --Get Batch Attribute table name for Batch Number
        select 
              @ATTRTABLE = BTC.BASETABLENAME 
        from 
              dbo.ATTRIBUTECATEGORY AC
               inner join dbo.ATTRIBUTECATEGORYBATCHTYPEEXTENSIONS BE on AC.ID = BE.ATTRIBUTECATEGORYID 
              inner join dbo.BATCHTYPEEXTENSIONCATALOG BTC on BE.BATCHTYPEEXTENSIONCATALOGID = BTC.ID 
        where 
              AC.NAME = 'Optix - Batch Number' and
               BTC.BATCHTYPECATALOGID in ( 
                    select 
                          BT_SUB.BATCHTYPECATALOGID
                     from 
                          dbo.BATCH B_SUB
                           inner join dbo.BATCHTEMPLATE BT_SUB on B_SUB.BATCHTEMPLATEID = BT_SUB.ID 
                    where
                           B_SUB.ID = (select top 1 id from @BATCHSELECTION)
               );
       
              --Get Batch Attribute table name for Batch Projected Total
        select 
              @ATTRTABLEPROJTOTAL = BTC.BASETABLENAME 
        from 
              dbo.ATTRIBUTECATEGORY AC
               inner join dbo.ATTRIBUTECATEGORYBATCHTYPEEXTENSIONS BE on AC.ID = BE.ATTRIBUTECATEGORYID 
              inner join dbo.BATCHTYPEEXTENSIONCATALOG BTC on BE.BATCHTYPEEXTENSIONCATALOGID = BTC.ID 
        where 
              AC.NAME = 'Optix - Batch Projected Total' and
               BTC.BATCHTYPECATALOGID in ( 
                    select 
                          BT_SUB.BATCHTYPECATALOGID
                     from 
                          dbo.BATCH B_SUB
                           inner join dbo.BATCHTEMPLATE BT_SUB on B_SUB.BATCHTEMPLATEID = BT_SUB.ID 
                    where
                           B_SUB.ID = (select top 1 id from @BATCHSELECTION)
               );
               
       --Get Batch Attribute table name for Batch Proj Number
        select 
              @ATTRTABLEPROJNUM = BTC.BASETABLENAME 
        from 
              dbo.ATTRIBUTECATEGORY AC
               inner join dbo.ATTRIBUTECATEGORYBATCHTYPEEXTENSIONS BE on AC.ID = BE.ATTRIBUTECATEGORYID 
              inner join dbo.BATCHTYPEEXTENSIONCATALOG BTC on BE.BATCHTYPEEXTENSIONCATALOGID = BTC.ID 
        where 
              AC.NAME = 'Optix - Batch Proj Number' and
               BTC.BATCHTYPECATALOGID in ( 
                    select 
                          BT_SUB.BATCHTYPECATALOGID
                     from 
                          dbo.BATCH B_SUB
                           inner join dbo.BATCHTEMPLATE BT_SUB on B_SUB.BATCHTEMPLATEID = BT_SUB.ID 
                    where
                           B_SUB.ID = (select top 1 id from @BATCHSELECTION)
               );               
     
      CREATE TABLE #BS(PK int identity(1,1), id UNIQUEIDENTIFIER)
      INSERT #BS SELECT * FROM @BATCHSELECTION
      
      declare @BATCHID uniqueidentifier
      declare @NEWVALUE varchar(30)
      declare @NEWVALUEPROJTOTAL varchar(30)
      declare @NEWVALUEPROJNUM varchar(30)
      declare @I int = 1      	
      declare @I_MAX integer
      
      select @I_MAX = count(*) from #BS
      
    --BEGIN LOOPING THROUGH TABLE DEFINED ABOVE 
    while @I <= @I_MAX
	  begin 		
			  select 
          @BATCHID = ID
        from 
          #BS
        where 
          PK = @I
        begin
          begin try  
            --GET OPTIX BATCH NUMBER (i.e. OBAP0001)

            DECLARE @tResults TABLE (
           	NEWVALUE nvarchar(30)
            )

            --set @SQL = 'select ''' + @NEWVALUE + '''= at.value from batch b inner join batchrevenue br on b.id = br.batchid inner join '+ @ATTRTABLE +' at on br.id = at.id where b.id = ''' + CAST(@BATCHID AS NVARCHAR(36)) +''''          
            set @SQL = 'select top 1 at.value as NEWVALUE from batch b inner join batchrevenue br on b.id = br.batchid inner join '+ @ATTRTABLE +' at on br.id = at.id where b.id = ''' + CAST(@BATCHID AS NVARCHAR(36)) +''''                     
            insert @tResults EXEC (@SQL)
            Select @NEWVALUE = NEWVALUE from @tResults
            --set @UPDATESQL = 'update batch set batchnumber =''test'' where batch.id =  ''' + CAST(@BATCHID AS NVARCHAR(36)) +''''
            set @UPDATESQL = 'update batch set batchnumber =''' + @NEWVALUE + ''' where batch.id =  ''' + CAST(@BATCHID AS NVARCHAR(36)) +''''            
            EXEC (@UPDATESQL)
            --set @NUMBEREDITED = @NUMBEREDITED + @@rowcount;  
            DELETE FROM @tResults
            
            DECLARE @tResultsProjTotal TABLE (
           	NEWVALUEPROJTOTAL money
            )            
            set @SQL = 'select top 1 cast(at.value as varchar(30)) as NEWVALUEPROJTOTAL from batch b inner join batchrevenue br on b.id = br.batchid inner join '+ @ATTRTABLEPROJTOTAL +' at on br.id = at.id where b.id = ''' + CAST(@BATCHID AS NVARCHAR(36)) +''''                     
            insert @tResultsProjTotal EXEC (@SQL)
            Select @NEWVALUEPROJTOTAL = NEWVALUEPROJTOTAL from @tResultsProjTotal
            set @UPDATESQL = 'update batch set PROJECTEDTOTALAMOUNT = ''' + @NEWVALUEPROJTOTAL + ''' where batch.id =  ''' + CAST(@BATCHID AS NVARCHAR(36)) +''''            
            EXEC (@UPDATESQL)
            --set @NUMBEREDITED = @NUMBEREDITED + @@rowcount;  
            DELETE FROM @tResultsProjTotal
    
            DECLARE @tResultsProjNum TABLE (
           	NEWVALUEPROJNUM nvarchar(100)
            )            
            set @SQL = 'select top 1 cast(at3.value as varchar(30)) as NEWVALUEPROJNUM from batch b inner join batchrevenue br on b.id = br.batchid inner join '+ @ATTRTABLEPROJNUM +' at3 on br.id = at3.id where b.id = ''' + CAST(@BATCHID AS NVARCHAR(36)) +''''                     
            insert @tResultsProjNum EXEC (@SQL)
            Select @NEWVALUEPROJNUM = NEWVALUEPROJNUM  from @tResultsProjNum
            set @UPDATESQL = 'update batch set PROJECTEDNUMBEROFRECORDS = ''' + @NEWVALUEPROJNUM + ''' where batch.id =  ''' + CAST(@BATCHID AS NVARCHAR(36)) +''''            
            EXEC (@UPDATESQL) 
            DELETE FROM @tResultsProjNum
            
            set @NUMBEREDITED = @NUMBEREDITED + @@rowcount; 
                        
          end try
	        begin catch
		        exec dbo.USP_RAISE_ERROR;
		        return 1;
	        end catch
        end
		    set @I = @I + 1 
	  end
    --END LOOPING THROUGH TABLE DEFINED ABOVE
    
      
      DROP TABLE #BS
	end try
	begin catch
		exec dbo.USP_RAISE_ERROR;
		return 1;
	end catch
		]]>
    </CreateProcedureSQL>

    <ParametersFormMetaData>
      <common:FormMetaData>
        <common:FormFields>
          <common:FormField FieldID="BATCHSELECTIONID" Caption="Batch Selection" DataType="Guid" Required="true" >
            <common:SearchList SearchListID="1F0E603C-1C55-4E1E-8218-BDB877B2CBE8">
            </common:SearchList>
          </common:FormField>
        </common:FormFields>
        <common:WebUIComponent>
          <common:WebUI>
            <common:DefaultWebUI />
          </common:WebUI>
        </common:WebUIComponent>
      </common:FormMetaData>
    </ParametersFormMetaData>

  </GlobalChangeSpec>
