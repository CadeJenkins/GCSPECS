  <GlobalChangeSpec
   xmlns="bb_appfx_globalchange"
   xmlns:common="bb_appfx_commontypes"
   ID="499341c7-9d80-46cc-8b84-f3ca08b2f14f"
   Name="Adjust Recurring Gift Schedule Global Change"
   Description="Adjust Recurring Gift Schedule Global Change"
   Author="HEIFERNET\khamling"
   DisplayName="Adjust Recurring Gift Schedule Global Change"
   GlobalChangeFolder="Revenue"
   SPName="USP_GLOBALCHANGE_ADJUST_RECURRING_GIFT_SCHEDULE"
>

    <!-- describe the SP that performs the global change operation -->
    <CreateProcedureSQL>
      <![CDATA[
create procedure dbo.USP_GLOBALCHANGE_ADJUST_RECURRING_GIFT_SCHEDULE
(
	@CHANGEAGENTID uniqueidentifier = null,
	@ASOF as datetime = null,
	@NUMBERADDED int = 0 output,
	@NUMBEREDITED int = 0 output,
	@NUMBERDELETED int = 0 output,
  @REVENUESELECTIONID UNIQUEIDENTIFIER
)
as			
	set nocount off;
	
	declare @CURRENTDATE datetime
	set @CURRENTDATE = getdate();
	set @NUMBERADDED = 0;
	set @NUMBEREDITED = 0;
	set @NUMBERDELETED = 0; 
	
	if @CHANGEAGENTID is null
		exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output;
					
	begin try
		-- do the global change operation here, and set @NUMBERADDED, @NUMBEREDITED, and/or @NUMBERDELETED as appropriate
		
      DECLARE @REVENUESELECTION TABLE ( 
        id UNIQUEIDENTIFIER PRIMARY KEY); 

      INSERT INTO @REVENUESELECTION
      SELECT id 
      FROM   dbo.Ufn_idsetreader_getresults_guid(@REVENUESELECTIONID) 
      
    -- if date <15th, then make 15th of next month, else make 15th of 2nd month.  
    update REVENUESCHEDULE set 
    NEXTTRANSACTIONDATE = 
    	case
		    when day(nexttransactiondate) < 15 then 
          --dateadd(day, 15-day(nexttransactiondate), NEXTTRANSACTIONDATE)
          --push out 1 month
          Dateadd(day,15,DATEADD(ms,- 3,DATEADD(mm,0,DATEADD(mm,DATEDIFF(mm,0,nexttransactiondate)+1,0))))
        else
          --change from pushing out 2 months to pushing out 1 month just as above.  Leaving day logic in case we revert back.
          --Dateadd(day,15,DATEADD(ms,- 3,DATEADD(mm,0,DATEADD(mm,DATEDIFF(mm,0,nexttransactiondate)+2,0))))
          Dateadd(day,15,DATEADD(ms,- 3,DATEADD(mm,0,DATEADD(mm,DATEDIFF(mm,0,nexttransactiondate)+1,0))))
	    end,
    STARTDATE = 
    	case
		    when day(STARTDATE) < 15 then 
        --dateadd(day, 15-day(STARTDATE), STARTDATE)
        Dateadd(day,15,DATEADD(ms,- 3,DATEADD(mm,0,DATEADD(mm,DATEDIFF(mm,0,startdate)+1,0))))
        else
          --Dateadd(day,15,DATEADD(ms,- 3,DATEADD(mm,0,DATEADD(mm,DATEDIFF(mm,0,startdate)+2,0))))
          Dateadd(day,15,DATEADD(ms,- 3,DATEADD(mm,0,DATEADD(mm,DATEDIFF(mm,0,startdate)+1,0))))
	    end
    where 
        ID in (select ID from @REVENUESELECTION)
        
    set @NUMBEREDITED = @NUMBEREDITED + @@rowcount;
      
	end try
	begin catch
		exec dbo.USP_RAISE_ERROR;
		return 1;
	end catch
		]]>
    </CreateProcedureSQL>

    <ParametersFormMetaData>
      <common:FormMetaData>
        <common:FormFields>
          
          <common:FormField FieldID="REVENUESELECTIONID" Caption="Revenue Selection" DataType="Guid" Required="true" >
            <common:SearchList SearchListID="1F0E603C-1C55-4E1E-8218-BDB877B2CBE8">
            </common:SearchList>
          </common:FormField>
        </common:FormFields>
        <common:WebUIComponent>
          <common:WebUI>
            <common:DefaultWebUI />
          </common:WebUI>
        </common:WebUIComponent>
      </common:FormMetaData>
    </ParametersFormMetaData>

  </GlobalChangeSpec>
