<GlobalChangeSpec 
	xmlns="bb_appfx_globalchange"  
	xmlns:common="bb_appfx_commontypes"
	ID="83c51b24-44a9-4a8e-b1e8-6a656beeb695"
	Name="Move Revenue To Merge Target Global Change"
	Description="Move Revenue To Merge Target Global Change"
	Author="HEIFERNET\khamling"
	DisplayName="Move Revenue To Merge Target Global Change"
	GlobalChangeFolder="REVENUE"
	SPName="USP_GLOBALCHANGE_MOVEREVENUETOMERGETARGET"
>

	<!-- describe the SP that performs the global change operation -->
	<CreateProcedureSQL>
		<![CDATA[
create procedure dbo.USP_GLOBALCHANGE_MOVEREVENUETOMERGETARGET
(
	@CHANGEAGENTID uniqueidentifier = null,
	@ASOF as datetime = null,
	@NUMBERADDED int = 0 output,
	@NUMBEREDITED int = 0 output,
	@NUMBERDELETED int = 0 output,
  @REVENUESELECTIONID UNIQUEIDENTIFIER
)
as			
	set nocount off;
	
	declare @CURRENTDATE datetime
	set @CURRENTDATE = getdate();
	set @NUMBERADDED = 0;
	set @NUMBEREDITED = 0;
	set @NUMBERDELETED = 0; 
	
	if @CHANGEAGENTID is null
		exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output;
					
	begin try
		-- do the global change operation here, and set @NUMBERADDED, @NUMBEREDITED, and/or @NUMBERDELETED as appropriate
    
      DECLARE @REVENUESELECTION TABLE ( 
        id UNIQUEIDENTIFIER PRIMARY KEY); 

      INSERT INTO @REVENUESELECTION
      SELECT id 
      FROM   dbo.Ufn_idsetreader_getresults_guid(@REVENUESELECTIONID) 
      
      --Update REVENUE AND RECOGNTITION RECORDS TO MOVE FROM INACTIVE CONSTITUENT.  THIS COULD POSSIBLY MOVE TO INACTIVE TARGET, SO
      --MAY NEED TO CYCLE UNTIL NUMBER UPDATED = 0.  TRY WITHOUT CYCLING FIRST.  IF WE NEED TO CYCLE, MAYBE HAVE TO REMOVE SELECT AND USE QUERY TO
      --PUT RECORDS INTO TEMP TABLE FOR SOURCE RECORDS.  THIS MAY BE CUMBERSOME.
      --
      --KHAMLING 1/28/14 - Ted wants to cycle 4 times, and then reactivate constituents if revenue remains in inactive record.
      --This Global Change will cycle 4 times, then Move Revenue to Merge Targe Reactivat Global Change will reactivate constituents with transactions remaining.
      
      --FIRST RUN
      update 
            dbo.FINANCIALTRANSACTION
        set
            CONSTITUENTID = CMO.TARGETID
	    from constituent c
	    inner join FINANCIALTRANSACTION r on c.id=r.constituentid
	    left join revenueposted rp on rp.id = r.id
	    inner join CONSTITUENTMERGEOPERATIONS CMO on CMO.SOURCEID = R.CONSTITUENTID
      inner join @REVENUESELECTION SelectionResults on SelectionResults.ID = r.ID
	    where 
		    cmo.sourceid<>cmo.targetid
		    --and c.isinactive=1
		    -- not posted
		    and rp.id is null
		    --and c.LOOKUPID in ('8-13016261')
        
      set @NUMBEREDITED = @NUMBEREDITED+@@ROWCOUNT;     
		
      update 
        dbo.REVENUERECOGNITION
      set
        CONSTITUENTID = CMO.TARGETID
        from constituent c
        inner join revenuerecognition rr on c.id=rr.constituentid
        inner join REVENUESPLIT rs on rs.id = rr.revenuesplitid
        left join revenueposted rp on rp.id = rs.revenueid
        inner join CONSTITUENTMERGEOPERATIONS CMO on CMO.SOURCEID = RR.CONSTITUENTID
        inner join @REVENUESELECTION SelectionResults on SelectionResults.ID = rs.revenueid
        where 
        cmo.sourceid<>cmo.targetid
        --and c.isinactive=1
        -- not posted
        and rp.id is null
        --and c.LOOKUPID in ('8-13016261')

      --SECOND RUN
      update 
            dbo.FINANCIALTRANSACTION
        set
            CONSTITUENTID = CMO.TARGETID
	    from constituent c
	    inner join FINANCIALTRANSACTION r on c.id=r.constituentid
	    left join revenueposted rp on rp.id = r.id
	    inner join CONSTITUENTMERGEOPERATIONS CMO on CMO.SOURCEID = R.CONSTITUENTID
      inner join @REVENUESELECTION SelectionResults on SelectionResults.ID = r.ID
	    where 
		    cmo.sourceid<>cmo.targetid
		    --and c.isinactive=1
		    -- not posted
		    and rp.id is null
		    --and c.LOOKUPID in ('8-13016261')
        
      set @NUMBEREDITED = @NUMBEREDITED+@@ROWCOUNT;     
		
      update 
        dbo.REVENUERECOGNITION
      set
        CONSTITUENTID = CMO.TARGETID
        from constituent c
        inner join revenuerecognition rr on c.id=rr.constituentid
        inner join REVENUESPLIT rs on rs.id = rr.revenuesplitid
        left join revenueposted rp on rp.id = rs.revenueid
        inner join CONSTITUENTMERGEOPERATIONS CMO on CMO.SOURCEID = RR.CONSTITUENTID
        inner join @REVENUESELECTION SelectionResults on SelectionResults.ID = rs.revenueid
        where 
        cmo.sourceid<>cmo.targetid
        --and c.isinactive=1
        -- not posted
        and rp.id is null
        --and c.LOOKUPID in ('8-13016261')
        
      --THIRD RUN
      update 
            dbo.FINANCIALTRANSACTION
        set
            CONSTITUENTID = CMO.TARGETID
	    from constituent c
	    inner join FINANCIALTRANSACTION r on c.id=r.constituentid
	    left join revenueposted rp on rp.id = r.id
	    inner join CONSTITUENTMERGEOPERATIONS CMO on CMO.SOURCEID = R.CONSTITUENTID
      inner join @REVENUESELECTION SelectionResults on SelectionResults.ID = r.ID
	    where 
		    cmo.sourceid<>cmo.targetid
		    --and c.isinactive=1
		    -- not posted
		    and rp.id is null
		    --and c.LOOKUPID in ('8-13016261')
        
      set @NUMBEREDITED = @NUMBEREDITED+@@ROWCOUNT;     
		
      update 
        dbo.REVENUERECOGNITION
      set
        CONSTITUENTID = CMO.TARGETID
        from constituent c
        inner join revenuerecognition rr on c.id=rr.constituentid
        inner join REVENUESPLIT rs on rs.id = rr.revenuesplitid
        left join revenueposted rp on rp.id = rs.revenueid
        inner join CONSTITUENTMERGEOPERATIONS CMO on CMO.SOURCEID = RR.CONSTITUENTID
        inner join @REVENUESELECTION SelectionResults on SelectionResults.ID = rs.revenueid
        where 
        cmo.sourceid<>cmo.targetid
        --and c.isinactive=1
        -- not posted
        and rp.id is null
        --and c.LOOKUPID in ('8-13016261')
        
      --FOURTH RUN
      update 
            dbo.FINANCIALTRANSACTION
       set
            CONSTITUENTID = CMO.TARGETID
	    from constituent c
	    inner join FINANCIALTRANSACTION r on c.id=r.constituentid
	    left join revenueposted rp on rp.id = r.id
	    inner join CONSTITUENTMERGEOPERATIONS CMO on CMO.SOURCEID = R.CONSTITUENTID
      inner join @REVENUESELECTION SelectionResults on SelectionResults.ID = r.ID
	    where 
		    cmo.sourceid<>cmo.targetid
		    --and c.isinactive=1
		    -- not posted
		    and rp.id is null
		    --and c.LOOKUPID in ('8-13016261')
        
      set @NUMBEREDITED = @NUMBEREDITED+@@ROWCOUNT;     
		
      update 
        dbo.REVENUERECOGNITION
      set
        CONSTITUENTID = CMO.TARGETID
        from constituent c
        inner join revenuerecognition rr on c.id=rr.constituentid
        inner join REVENUESPLIT rs on rs.id = rr.revenuesplitid
        left join revenueposted rp on rp.id = rs.revenueid        
        inner join CONSTITUENTMERGEOPERATIONS CMO on CMO.SOURCEID = RR.CONSTITUENTID
        inner join @REVENUESELECTION SelectionResults on SelectionResults.ID = rs.revenueid
        where 
        cmo.sourceid<>cmo.targetid
        --and c.isinactive=1
        -- not posted
        and rp.id is null
        --and c.LOOKUPID in ('8-13016261')   
		
	end try
	
	begin catch
		exec dbo.USP_RAISE_ERROR;
		return 1;
	end catch
		]]>
  </CreateProcedureSQL>

  <ParametersFormMetaData>
    <common:FormMetaData>
      <common:FormFields>
        <common:FormField FieldID="REVENUESELECTIONID" Caption="Revenue Selection" DataType="Guid" Required="true" >
          <common:SearchList SearchListID="1F0E603C-1C55-4E1E-8218-BDB877B2CBE8">
          </common:SearchList>
        </common:FormField>
      </common:FormFields>
      <common:WebUIComponent>
        <common:WebUI>
          <common:DefaultWebUI />
        </common:WebUI>
      </common:WebUIComponent>
    </common:FormMetaData>
  </ParametersFormMetaData>
  
</GlobalChangeSpec>
