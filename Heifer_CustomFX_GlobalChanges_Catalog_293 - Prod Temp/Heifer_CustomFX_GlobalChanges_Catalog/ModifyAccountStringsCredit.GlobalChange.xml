  <GlobalChangeSpec xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    ID="f1078331-14ac-4abc-bc7a-461347ae4b6b" Name="Modify Account Strings Credit Global Change"
                    Description="Update the account strings for specific credit instances." Author="HEIFERNET\khamling"
                    SPName="USP_GLOBALCHANGE_HEIFER_MODIFYACCOUNTS_CREDIT" DisplayName="Modify Account Strings Credit Global Change"
                    GlobalChangeFolder="Revenue" xmlns="bb_appfx_globalchange">
    <CreateProcedureSQL>

          create procedure dbo.USP_GLOBALCHANGE_HEIFER_MODIFYACCOUNTS_CREDIT
          (
          @CHANGEAGENTID uniqueidentifier = null,
          @ASOF as datetime = null,
          @NUMBERADDED int = 0 output,
          @NUMBEREDITED int = 0 output,
          @NUMBERDELETED int = 0 output,
          @IDSETREGISTERID uniqueidentifier,
          @ACCOUNTS xml
          )
          as
          set nocount off;

          declare @CURRENTDATE datetime
          set @CURRENTDATE = getdate();
          set @NUMBERADDED = 0;
          set @NUMBEREDITED = 0;
          set @NUMBERDELETED = 0;

          if @CHANGEAGENTID is null
          exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output;

          begin try

          declare @IDSETREGISTER table (ID uniqueidentifier primary key)
          insert into @IDSETREGISTER
          select * from dbo.ufn_IdSetReader_GetResults_guId(@IDSETREGISTERID)

          declare @CHANGES table
          (
          SEQUENCE int identity,
          ACCOUNT nvarchar(100),
          SEGMENT1 nvarchar(100)
          )

          declare @handle int
          exec sp_xml_preparedocument @handle output, @ACCOUNTS

          insert into @CHANGES (ACCOUNT, SEGMENT1)
          select SEARCH, SEGMENT1 from openxml(@handle, '/ACCOUNTS/ITEM') with (
          SEARCH nvarchar(100) 'SEARCH',
          SEGMENT1 nvarchar(100) 'SEGEMENT1'
          )

          declare @COUNTER int
          declare @MAX int
          declare @ACCOUNT nvarchar(100)
          declare @SEGMENT1 nvarchar(100)

          set @COUNTER = 1
          set @MAX = (select MAX(SEQUENCE) from @CHANGES)

          while @COUNTER &lt;= @MAX
      begin
      select @ACCOUNT = ACCOUNT, @SEGMENT1 = SEGMENT1 from @CHANGES where SEQUENCE = @COUNTER

      -- Find the GUID from glaccounts
      declare @SEGMENTACCOUNTID uniqueidentifier = null
      select @SEGMENTACCOUNTID = ID from GLACCOUNT where ACCOUNTNUMBER = @SEGMENT1
      declare @ACCOUNTID uniqueidentifier = null
      select @ACCOUNTID = ID from GLACCOUNT where ACCOUNTNUMBER = @ACCOUNT

      if @SEGMENTACCOUNTID is not null and @ACCOUNTID is not null
      begin

      --Set the glaccount id to the new value
      update JOURNALENTRY
      set GLACCOUNTID = @SEGMENTACCOUNTID
      from JOURNALENTRY
      inner join JOURNALENTRY_EXT on JOURNALENTRY.ID = JOURNALENTRY_EXT.ID and JOURNALENTRY_EXT.TABLENAMECODE = 1
      inner join financialtransactionlineitem ftli on ftli.id = journalentry.financialtransactionlineitemid
      inner join financialtransaction ft on ft.id = ftli.financialtransactionid
      --inner join @IDSETREGISTER I on JOURNALENTRY_EXT.REVENUEID = I.ID
      inner join @IDSETREGISTER I on ft.ID = I.ID
      where (JOURNALENTRY.GLACCOUNTID = @ACCOUNTID or JOURNALENTRY_EXT.ACCOUNT = @ACCOUNT)
      and journalentry.transactiontype = 'Credit'

      set @NUMBEREDITED = @NUMBEREDITED+@@ROWCOUNT;

      update JOURNALENTRY
      set GLACCOUNTID = @SEGMENTACCOUNTID
      from JOURNALENTRY
      inner join JOURNALENTRY_EXT on JOURNALENTRY.ID = JOURNALENTRY_EXT.ID and JOURNALENTRY_EXT.TABLENAMECODE = 5
      inner join financialtransactionlineitem ftli on ftli.id = journalentry.financialtransactionlineitemid
      inner join financialtransaction ft on ft.id = ftli.financialtransactionid
      --inner join REVENUEBENEFIT on JOURNALENTRY_EXT.REVENUEID = REVENUEBENEFIT.ID
      inner join REVENUEBENEFIT on ft.id = REVENUEBENEFIT.ID
      inner join @IDSETREGISTER I on REVENUEBENEFIT.REVENUEID = I.ID
      where (JOURNALENTRY.GLACCOUNTID = @ACCOUNTID or JOURNALENTRY_EXT.ACCOUNT = @ACCOUNT)
      and journalentry.transactiontype = 'Credit'

      set @NUMBEREDITED = @NUMBEREDITED+@@ROWCOUNT;

      update JOURNALENTRY_EXT
      set ACCOUNT = @SEGMENT1
      from JOURNALENTRY_EXT
      inner join JOURNALENTRY on JOURNALENTRY_EXT.ID = JOURNALENTRY.ID
      inner join financialtransactionlineitem ftli on ftli.id = journalentry.financialtransactionlineitemid
      inner join financialtransaction ft on ft.id = ftli.financialtransactionid
      --inner join @IDSETREGISTER I on JOURNALENTRY_EXT.REVENUEID = I.ID
      inner join @IDSETREGISTER I on ft.ID = I.ID
      where JOURNALENTRY_EXT.TABLENAMECODE = 1 and
      (JOURNALENTRY.GLACCOUNTID = @ACCOUNTID or JOURNALENTRY_EXT.ACCOUNT = @ACCOUNT)
      and journalentry.transactiontype = 'Credit'

      set @NUMBEREDITED = @NUMBEREDITED+@@ROWCOUNT;

      update JOURNALENTRY_EXT
      set ACCOUNT = @SEGMENT1
      from JOURNALENTRY_EXT
      inner join JOURNALENTRY on JOURNALENTRY_EXT.ID = JOURNALENTRY.ID
      inner join financialtransactionlineitem ftli on ftli.id = journalentry.financialtransactionlineitemid
      inner join financialtransaction ft on ft.id = ftli.financialtransactionid
      --inner join REVENUEBENEFIT on JOURNALENTRY_EXT.REVENUEID = REVENUEBENEFIT.ID
      inner join REVENUEBENEFIT on ft.id = REVENUEBENEFIT.ID
      inner join @IDSETREGISTER I on REVENUEBENEFIT.REVENUEID = I.ID
      where JOURNALENTRY_EXT.TABLENAMECODE = 5 and
      (JOURNALENTRY.GLACCOUNTID = @ACCOUNTID or JOURNALENTRY_EXT.ACCOUNT = @ACCOUNT)
      and journalentry.transactiontype = 'Credit'

      set @NUMBEREDITED = @NUMBEREDITED+@@ROWCOUNT;

      end
      else
      begin

      --Set the Account to the new value
      update JOURNALENTRY_EXT
      set ACCOUNT = @SEGMENT1
      from JOURNALENTRY_EXT
      inner join JOURNALENTRY on JOURNALENTRY_EXT.ID = JOURNALENTRY.ID
      inner join financialtransactionlineitem ftli on ftli.id = journalentry.financialtransactionlineitemid
      inner join financialtransaction ft on ft.id = ftli.financialtransactionid
      --inner join @IDSETREGISTER I on JOURNALENTRY_EXT.REVENUEID = I.ID
      inner join @IDSETREGISTER I on ft.id = I.ID
      where JOURNALENTRY_EXT.TABLENAMECODE = 1 and
      (JOURNALENTRY.GLACCOUNTID = @ACCOUNTID or JOURNALENTRY_EXT.ACCOUNT = @ACCOUNT)
      and journalentry.transactiontype = 'Credit'

      set @NUMBEREDITED = @NUMBEREDITED+@@ROWCOUNT;

      update JOURNALENTRY_EXT
      set ACCOUNT = @SEGMENT1
      from JOURNALENTRY_EXT
      inner join JOURNALENTRY on JOURNALENTRY_EXT.ID = JOURNALENTRY.ID
      inner join financialtransactionlineitem ftli on ftli.id = journalentry.financialtransactionlineitemid
      inner join financialtransaction ft on ft.id = ftli.financialtransactionid
      --inner join REVENUEBENEFIT on JOURNALENTRY_EXT.REVENUEID = REVENUEBENEFIT.ID
      inner join REVENUEBENEFIT on ft.id = REVENUEBENEFIT.ID
      inner join @IDSETREGISTER I on REVENUEBENEFIT.REVENUEID = I.ID
      where JOURNALENTRY_EXT.TABLENAMECODE = 5 and
      (JOURNALENTRY.GLACCOUNTID = @ACCOUNTID or JOURNALENTRY_EXT.ACCOUNT = @ACCOUNT)
      and journalentry.transactiontype = 'Credit'

      set @NUMBEREDITED = @NUMBEREDITED+@@ROWCOUNT;

      --Clear out account if it was set
      update JOURNALENTRY
      set GLACCOUNTID = null
      from JOURNALENTRY
      inner join JOURNALENTRY_EXT on JOURNALENTRY.ID = JOURNALENTRY_EXT.ID and JOURNALENTRY_EXT.TABLENAMECODE = 1
      inner join financialtransactionlineitem ftli on ftli.id = journalentry.financialtransactionlineitemid
      inner join financialtransaction ft on ft.id = ftli.financialtransactionid
      --inner join @IDSETREGISTER I on JOURNALENTRY_EXT.REVENUEID = I.ID
      inner join @IDSETREGISTER I on ft.id = I.ID
      where (JOURNALENTRY.GLACCOUNTID = @ACCOUNTID or JOURNALENTRY_EXT.ACCOUNT = @ACCOUNT)
      and journalentry.transactiontype = 'Credit'

      update JOURNALENTRY
      set GLACCOUNTID = null
      from JOURNALENTRY
      inner join JOURNALENTRY_EXT on JOURNALENTRY.ID = JOURNALENTRY_EXT.ID and JOURNALENTRY_EXT.TABLENAMECODE = 5
      inner join financialtransactionlineitem ftli on ftli.id = journalentry.financialtransactionlineitemid
      inner join financialtransaction ft on ft.id = ftli.financialtransactionid
      --inner join REVENUEBENEFIT on JOURNALENTRY_EXT.REVENUEID = REVENUEBENEFIT.ID
      inner join REVENUEBENEFIT on ft.id = REVENUEBENEFIT.ID
      inner join @IDSETREGISTER I on REVENUEBENEFIT.REVENUEID = I.ID
      where (JOURNALENTRY.GLACCOUNTID = @ACCOUNTID or JOURNALENTRY_EXT.ACCOUNT = @ACCOUNT)
      and journalentry.transactiontype = 'Credit'

      end

      set @COUNTER = @COUNTER + 1

      end

      end try

      begin catch

      exec dbo.USP_RAISE_ERROR;
      return 1;
      end catch

    </CreateProcedureSQL>
        <ParametersFormMetaData>
          <FormMetaData xmlns="bb_appfx_commontypes">
            <FormFields>
              <FormField FieldID="IDSETREGISTERID" DataType="Guid" Required="true" Caption="Revenue selection">
                <SearchList SearchListID="1f0e603c-1c55-4e1e-8218-bdb877b2cbe8">
                  <FormFieldOverrides>
                    <FormFieldOverride FieldID="RECORDTYPE" Caption="Record type" ReadOnly="true" DefaultValueText="Revenue" />
                  </FormFieldOverrides>
                </SearchList>
              </FormField>
              <FormField FieldID="ACCOUNTS" DataType="XML" Required="true" Caption="Replacement values">
                <Collection>
                  <Fields>
                    <FormField FieldID="SEARCH" Required="true" Caption="Search" />
                    <FormField FieldID="SEGEMENT1" Required="true" MaxLength="44" Caption="Account string" />
                  </Fields>
                </Collection>
              </FormField>
            </FormFields>
            <WebUIComponent>
              <WebUI>
                <DefaultWebUI />
              </WebUI>
            </WebUIComponent>
          </FormMetaData>
        </ParametersFormMetaData>
      </GlobalChangeSpec>