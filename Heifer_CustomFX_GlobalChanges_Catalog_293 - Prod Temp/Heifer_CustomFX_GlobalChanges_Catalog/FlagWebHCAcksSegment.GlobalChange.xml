  <GlobalChangeSpec
    xmlns="bb_appfx_globalchange"
    xmlns:common="bb_appfx_commontypes"
    ID="9b287c7e-0019-484c-9d45-0f1ae5531bf9"
    Name="Flag Web HC Acks Segment"
    Description="Flag Web HC Acks Segment"
    Author="HEIFERNET\khamling"
    DisplayName="Flag Web HC Acks Segment"
    GlobalChangeFolder="Revenue"
    SPName="USR_USP_GLOBALCHANGE_FLAG_WEBHC_ACKSEGMENT"
>


    <!-- describe the SP that performs the global change operation -->
    <CreateProcedureSQL>
      <![CDATA[
create procedure dbo.USR_USP_GLOBALCHANGE_FLAG_WEBHC_ACKSEGMENT
(
	@CHANGEAGENTID uniqueidentifier = null,
	@ASOF as datetime = null,
	@NUMBERADDED int = 0 output,
	@NUMBEREDITED int = 0 output,
	@NUMBERDELETED int = 0 output,
  @COMMENT varchar(255),
  @STARTDATE datetime,
  @ENDDATE datetime,
  @MKTACKSELECTIONID UNIQUEIDENTIFIER
)
as			
	set nocount off;
	
  declare @I_MAX integer
  declare @NUMRECS integer
  declare @MAGENTOORDERNUMBER integer
  declare @ACKSSEGMENT nvarchar(100)
  declare @REV_NEEDING_ACKSSEGMENT_ADDED uniqueidentifier
  declare @REVENUEID uniqueidentifier
	declare @CURRENTDATE datetime
	set @CURRENTDATE = getdate();
	set @NUMBERADDED = 0;
	set @NUMBEREDITED = 0;
	set @NUMBERDELETED = 0; 
	
	if @CHANGEAGENTID is null
		exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output;
    
    DECLARE @ADDEDBYID varchar(50)
		SET @ADDEDBYID = @changeagentid
    
    DECLARE @SELECTIONTEXT varchar(200)
					
	begin try
		-- do the global change operation here, and set @NUMBERADDED, @NUMBEREDITED, and/or @NUMBERDELETED as appropriate
		
    
      DECLARE @REVENUESELECTION TABLE ( 
      id UNIQUEIDENTIFIER PRIMARY KEY); 

      --INSERT INTO @REVENUESELECTION 
      --SELECT id 
      --FROM   dbo.Ufn_idsetreader_getresults_guid(@MKTACKSELECTIONID) 
      
      INSERT INTO @REVENUESELECTION
      SELECT revenueid 
      FROM USR_V_QUERY_MKTSEGMATIONDATA_ASK where id in (SELECT id 
      FROM   dbo.Ufn_idsetreader_getresults_guid(@MKTACKSELECTIONID)) 
      
      --This will let us do AsK and No Ask as a single Global Change
      INSERT INTO @REVENUESELECTION
      SELECT revenueid from USR_V_QUERY_MKTSEGMATIONDATA_NOASK 
      where id in 
        (SELECT id 
         FROM   dbo.Ufn_idsetreader_getresults_guid(@MKTACKSELECTIONID))
      and revenueid not in 
       (select id from @REVENUESELECTION)
    
    declare @T2 table
    (
      PK int identity(1,1), 
      REV_NEEDING_ACKSSEGMENT_ADDED uniqueidentifier
    )  
          
    declare @T table
    (
      PK int identity(1,1), 
      REVENUEID uniqueidentifier
    )
    declare @I int = 1
         
    insert into @T 
	    select ID from @REVENUESELECTION
	    
    select @I_MAX = count(*) from @T
    
    --BEGIN LOOPING THROUGH TABLE DEFINED ABOVE 
    while @I <= @I_MAX
	  begin 	
    
      	select 
          @REVENUEID = REVENUEID
        from 
          @T 
        where 
          PK = @I
    
        select 
          @MAGENTOORDERNUMBER = ordernumberatt.value,
          @ACKSSEGMENT = ackssegmentatt.value
        from 
         financialtransaction ft
         inner join ATTRIBUTE60539A2A97E14A1CBE12AFF32102D797 ordernumberatt on ordernumberatt.revenueid = ft.id
         inner join ATTRIBUTEDD19C00C47EF4968BCD22928D29EE0DB ackssegmentatt on ackssegmentatt.id = ft.id
        and ft.id = @REVENUEID
        
        if (@MAGENTOORDERNUMBER is not null) and (@ACKSSEGMENT is not null)
        begin
          insert into @T2 
            select 
              ft.id 
            from 
              ATTRIBUTE60539A2A97E14A1CBE12AFF32102D797 ordernumberatt
              inner join financialtransaction ft on ft.id = ordernumberatt.revenueid
            where 
              ordernumberatt.value = @MAGENTOORDERNUMBER
              and ft.id <> @REVENUEID
              and transactionamount = 0                         

              insert into ATTRIBUTEDD19C00C47EF4968BCD22928D29EE0DB  --PROD "ACKS SEGMENTS" ATTRIBUTE
              (
               id, value, comment, startdate, enddate, addedbyid,changedbyid,dateadded,datechanged
              ) 
              (
               select REV_NEEDING_ACKSSEGMENT_ADDED, @ACKSSEGMENT,
               @COMMENT, @STARTDATE, @ENDDATE, @changeagentid,@changeagentid,@currentdate,@currentdate
               from @T2 where REV_NEEDING_ACKSSEGMENT_ADDED not in (select id from ATTRIBUTEDD19C00C47EF4968BCD22928D29EE0DB)
              )
              set @NUMBERADDED=@NUMBERADDED+@@ROWCOUNT
          delete from @T2
        end
        set @I = @I + 1   		
	  end
    --END LOOPING THROUGH TABLE DEFINED ABOVE
	end try
	begin catch
		exec dbo.USP_RAISE_ERROR;
		return 1;
	end catch
		]]>
    </CreateProcedureSQL>

    <ParametersFormMetaData>
      <common:FormMetaData>
        <common:FormFields>
          <common:FormField FieldID="COMMENT" Caption="Comment" DataType="String" Required="false" >
          </common:FormField>
          <common:FormField FieldID="STARTDATE" Caption="Start Date" DataType="Date" Required="false" >
          </common:FormField>
          <common:FormField FieldID="ENDDATE" Caption="End Date" DataType="Date" Required="false" >
          </common:FormField>
          <common:FormField FieldID="MKTACKSELECTIONID" Caption="Market Acknowledgement Segment Member Exports Selection" DataType="Guid" Required="true" >
            <common:SearchList SearchListID="1F0E603C-1C55-4E1E-8218-BDB877B2CBE8">
            </common:SearchList>
          </common:FormField>
        </common:FormFields>
        <common:WebUIComponent>
          <common:WebUI>
            <common:DefaultWebUI />
          </common:WebUI>
        </common:WebUIComponent>
      </common:FormMetaData>
    </ParametersFormMetaData>

  </GlobalChangeSpec>
