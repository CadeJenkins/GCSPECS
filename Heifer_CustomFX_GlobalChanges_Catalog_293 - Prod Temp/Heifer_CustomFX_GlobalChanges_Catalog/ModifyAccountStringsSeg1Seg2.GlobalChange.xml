<GlobalChangeSpec xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  ID="56f5fc2f-1a7d-4d73-8f37-8925bc860712" Name="Modify Account Strings Global Change (Segment One (3), Segment Two (2))" 
                  Description="Update the account strings for specific instances." Author="Blackbaud Professional Services" 
                  SPName="USP_GLOBALCHANGE_HEIFER_MODIFYACCOUNTS_SEGMENT_1_AND_2" DisplayName="Modify Account Strings Global Change (Segments 1 and 2)" 
                  GlobalChangeFolder="Revenue" xmlns="bb_appfx_globalchange">
<CreateProcedureSQL>

    create procedure dbo.USP_GLOBALCHANGE_HEIFER_MODIFYACCOUNTS_SEGMENT_1_AND_2
    (
    @CHANGEAGENTID uniqueidentifier = null,
    @ASOF as datetime = null,
    @NUMBERADDED int = 0 output,
    @NUMBEREDITED int = 0 output,
    @NUMBERDELETED int = 0 output,
    @IDSETREGISTERID uniqueidentifier,
    @ACCOUNTS xml
    )
    as
    begin
    set nocount off;

    declare @CURRENTDATE datetime
    set @CURRENTDATE = getdate();
    set @NUMBERADDED = 0;
    set @NUMBEREDITED = 0;
    set @NUMBERDELETED = 0;

    if @CHANGEAGENTID is null
    exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output;

    begin try

    declare @IDSETREGISTER table (ID uniqueidentifier primary key)
    insert into @IDSETREGISTER
    select * from dbo.ufn_IdSetReader_GetResults_guId(@IDSETREGISTERID)

    declare @CHANGES table
    (
    SEQUENCE int identity,
    ACCOUNT nvarchar(100),
    SEGMENT1 nvarchar(3),
    SEGMENT2 nvarchar(2)
    )

    declare @handle int
    exec sp_xml_preparedocument @handle output, @ACCOUNTS

    insert into @CHANGES (ACCOUNT, SEGMENT1, SEGMENT2)
    select SEARCH, SEGMENT1, SEGMENT2 from openxml(@handle, '/ACCOUNTS/ITEM') with (
    SEARCH nvarchar(100) 'SEARCH',
    SEGMENT1 nvarchar(3) 'SEGEMENT1',
    SEGMENT2 nvarchar(2) 'SEGEMENT2'
    )

    declare @COUNTER int
    declare @MAX int
    declare @ACCOUNT nvarchar(100)
    declare @SEGMENT1 nvarchar(3)
    declare @SEGMENT2 nvarchar(2)

    set @COUNTER = 1
    set @MAX = (select MAX(SEQUENCE) from @CHANGES)

    while @COUNTER &lt;= @MAX
    begin
    select @ACCOUNT = ACCOUNT,
    @SEGMENT1 = SEGMENT1,
    @SEGMENT2 = SEGMENT2
    from @CHANGES
    where SEQUENCE = @COUNTER

    -- Find the account number
    declare @REPLACEACCOUNTNUMBER as nvarchar(100)
    select @REPLACEACCOUNTNUMBER = replace(@ACCOUNT, SUBSTRING(@ACCOUNT, 1, 6), @SEGMENT1 + '-' + @SEGMENT2)
    declare @GLACCOUNTID uniqueidentifier
    select @GLACCOUNTID = ID from GLACCOUNT where ACCOUNTNUMBER = @REPLACEACCOUNTNUMBER

    if @GLACCOUNTID is not null
    begin
    --Set the glaccount id to the new value
    update JOURNALENTRY
    set GLACCOUNTID = @GLACCOUNTID
    from JOURNALENTRY
    inner join JOURNALENTRY_EXT on JOURNALENTRY.ID = JOURNALENTRY_EXT.ID and JOURNALENTRY_EXT.TABLENAMECODE = 1
    inner join @IDSETREGISTER I on JOURNALENTRY_EXT.REVENUEID = I.ID
    where JOURNALENTRY_EXT.ACCOUNT = @ACCOUNT

    update JOURNALENTRY_EXT
    set ACCOUNT = @REPLACEACCOUNTNUMBER
    from JOURNALENTRY_EXT
    inner join JOURNALENTRY on JOURNALENTRY_EXT.ID = JOURNALENTRY.ID
    inner join @IDSETREGISTER I on JOURNALENTRY_EXT.REVENUEID = I.ID
    where JOURNALENTRY_EXT.TABLENAMECODE = 1 and
    JOURNALENTRY_EXT.ACCOUNT = @ACCOUNT
    end
    else
    begin
    --Set the Account to the new value
    update JOURNALENTRY_EXT
    set ACCOUNT = @REPLACEACCOUNTNUMBER
    from JOURNALENTRY_EXT
    inner join JOURNALENTRY on JOURNALENTRY_EXT.ID = JOURNALENTRY.ID
    inner join @IDSETREGISTER I on JOURNALENTRY_EXT.REVENUEID = I.ID
    where JOURNALENTRY_EXT.TABLENAMECODE = 1 and
    JOURNALENTRY_EXT.ACCOUNT = @ACCOUNT

    --Clear out account if it was set
    update JOURNALENTRY
    set GLACCOUNTID = null
    from JOURNALENTRY
    inner join JOURNALENTRY_EXT on JOURNALENTRY.ID = JOURNALENTRY_EXT.ID and JOURNALENTRY_EXT.TABLENAMECODE = 1
    inner join @IDSETREGISTER I on JOURNALENTRY_EXT.REVENUEID = I.ID
    where JOURNALENTRY_EXT.ACCOUNT = @ACCOUNT
    end

    set @COUNTER = @COUNTER + 1
    end
    end try

    begin catch
    exec dbo.USP_RAISE_ERROR;
    return 1;
    end catch
    end

  </CreateProcedureSQL>
  <ParametersFormMetaData>
    <FormMetaData xmlns="bb_appfx_commontypes">
      <FormFields>
        <FormField FieldID="IDSETREGISTERID" DataType="Guid" Required="true" Caption="Revenue selection">
          <SearchList SearchListID="1f0e603c-1c55-4e1e-8218-bdb877b2cbe8">
            <FormFieldOverrides>
              <FormFieldOverride FieldID="RECORDTYPE" Caption="Record type" ReadOnly="true" DefaultValueText="Revenue" />
            </FormFieldOverrides>
          </SearchList>
        </FormField>
        <FormField FieldID="ACCOUNTS" DataType="XML" Required="true" Caption="Replacement values">
          <Collection>
            <Fields>
              <FormField FieldID="SEARCH" Required="true" Caption="Search" />
              <FormField FieldID="SEGEMENT1" Required="true" MaxLength="3" Caption="Segment 1" />
              <FormField FieldID="SEGEMENT2" Required="true" MaxLength="2" Caption="Segment 2" />
            </Fields>
          </Collection>
        </FormField>
      </FormFields>
      <WebUIComponent>
        <WebUI>
          <DefaultWebUI />
        </WebUI>
      </WebUIComponent>
    </FormMetaData>
  </ParametersFormMetaData>
</GlobalChangeSpec>