  <GlobalChangeSpec xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    ID="768585cc-1558-4222-8b8b-c68f27fa925b" Name="Update Source Code By Revenue Attribute"
                    Description="Sets source codes based on revenue attribute value, based on revenue selection"
                    Author="HEIFERNET\khamling" SPName="USR_USP_GLOBALCHANGE_SOURCECODES_BY_REVATTRVALUE" DisplayName="Update Source Code By Revenue Attribute"
                    GlobalChangeFolder="Revenue" xmlns="bb_appfx_globalchange">
    <CreateProcedureSQL>
      <![CDATA[
      create procedure dbo.USR_USP_GLOBALCHANGE_SOURCECODES_BY_REVATTRVALUE
      (
      @CHANGEAGENTID uniqueidentifier = null,
      @ASOF as datetime = null,
      @NUMBERADDED int = 0 output,
      @NUMBEREDITED int = 0 output,
      @NUMBERDELETED int = 0 output,
      @SOURCECODES xml,
      @ATTRIBUTECATEGORYID UNIQUEIDENTIFIER,
      @REVENUESELECTIONID UNIQUEIDENTIFIER
      )
      as
      set nocount off;

      declare @SC_COUNT integer
      declare @REVENUEID uniqueidentifier      
      declare @CURRENTDATE datetime
      set @CURRENTDATE = getdate();
      set @NUMBERADDED = 0;
      set @NUMBEREDITED = 0;
      set @NUMBERDELETED = 0;

      if @CHANGEAGENTID is null
      exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output;

    begin try
      -- do the global change operation here, and set @NUMBERADDED, @NUMBEREDITED, and/or @NUMBERDELETED as appropriate

      DECLARE @REVENUESELECTION TABLE (
      id UNIQUEIDENTIFIER PRIMARY KEY);

      INSERT INTO @REVENUESELECTION
      SELECT id
      FROM   dbo.Ufn_idsetreader_getresults_guid(@REVENUESELECTIONID)

      declare @SCTEMP table
      (
      AttrValue nvarchar(100),
      SourceCode nvarchar(30)
      )

      declare @handle int
      exec sp_xml_preparedocument @handle output, @SOURCECODES


      insert into @SCTEMP
      select AttrValue, SourceCode from openxml(@handle, '/SOURCECODES/ITEM') with (
      ATTRVALUE nvarchar(100) 'ATTRVALUE',
      SOURCECODE nvarchar(30) 'SOURCECODE'
      )
      
      CREATE TABLE #SC
      (
      PK int identity(1,1),
      AttrValue nvarchar(100),
      SourceCode nvarchar(30)
      )
      INSERT #SC SELECT * FROM @SCTEMP

--NEED TO GET ATTRIBUTE TABLE FROM TYPE ENTERED.
--testing with "MSource" attribute for now.
DECLARE @ATTRTABLE VARCHAR(100);
DECLARE @SQL VARCHAR(2000);

select @ATTRTABLE = replace('ATTRIBUTE' + convert(nvarchar(100),id),'-','') from attributecategory 
where attributerecordtypeid in 
(
  select id from attributerecordtype where recordtypeid in
  (
    select id from recordtype where name='Revenue'           
  )
)
and attributecategory.id = @ATTRIBUTECATEGORYID

      CREATE TABLE #RS(id UNIQUEIDENTIFIER)
      INSERT #RS SELECT * FROM @REVENUESELECTION

--NEEDED TO PREVENT UPDATE QUERY BELOW FROM TRYING TO SET SOURCECODE=NULL IF THE ATTRIBUTE DOESN'T EXIST ON THE REVENUE TRANSACTION
set @SQL = 'delete from #RS where id not in (select id from '+ @ATTRTABLE +' )'
EXEC (@SQL)
      
declare @I int = 1      	
declare @I_MAX integer
DECLARE @ATTRVALUE VARCHAR(100);
DECLARE @SOURCECODE VARCHAR(30);

select @I_MAX = count(*) from #SC

    while @I <= @I_MAX
	  begin 		
      select 
        @ATTRVALUE = ATTRVALUE,
        @SOURCECODE = SOURCECODE
      from 
        #SC
      where 
        PK = @I      
          begin try 
            set @SQL =  'update REVENUE set sourcecode = '''+ @SOURCECODE +''' where (select value from ' + @ATTRTABLE + ' attr where attr.id = revenue.id) like '''+ @ATTRVALUE +''' and revenue.id in (select id from #RS)'   
            EXEC (@SQL)
            set @NUMBEREDITED= @@ROWCOUNT + @NUMBEREDITED
          end try
	        begin catch
		        exec dbo.USP_RAISE_ERROR;
		        return 1;
	        end catch          
                
      set @I = @I + 1 
	  end
    --END LOOPING THROUGH TABLE DEFINED ABOVE
      
      --Below was used without loop for straight match.  Changed to above so pattern matching could be used.
      --set @SQL = 'update REVENUE set SOURCECODE = (select upper(S.SOURCECODE) FROM '+ @ATTRTABLE +' ATTR join #SC S on ATTR.VALUE = S.ATTRVALUE where ATTR.ID = REVENUE.ID) where ID in (select ID from #RS)'                
      --EXEC (@SQL)       

      DROP TABLE #SC
      DROP TABLE #RS
    end try

    begin catch
      exec dbo.USP_RAISE_ERROR;
      return 1;
    end catch
		]]>
    </CreateProcedureSQL>
    <ParametersFormMetaData>
      <FormMetaData xmlns="bb_appfx_commontypes">
        <FormFields>
          <FormField FieldID="ATTRIBUTECATEGORYID" DataType="Guid" Required="true" Caption="Category" CaptionResourceKey="$$category">
            <SimpleDataList SimpleDataListID="958132a3-762a-4844-b7a1-f3a3098da95a">
              <Params>
                <Param ID="RECORDTYPE">
                  <Value>REVENUE</Value>
                </Param>
              </Params>
            </SimpleDataList>
          </FormField>
          <FormField FieldID="SOURCECODES" DataType="XML" Required="true" Caption="Source map  (may use % wildcard in Attribute value)">
            <Collection>
              <Fields>
                <FormField FieldID="AttrValue" DataType="String" Required="true" Caption="Atrribute Value" />
                <FormField FieldID="SourceCode" Required="true" Caption="Source Code" />
              </Fields>
            </Collection>
          </FormField>
          <FormField FieldID="REVENUESELECTIONID" Caption="Revenue Selection" DataType="Guid" Required="true" >
            <SearchList SearchListID="1F0E603C-1C55-4E1E-8218-BDB877B2CBE8">
            </SearchList>
          </FormField>
        </FormFields>
        <WebUIComponent>
          <WebUI>
            <DefaultWebUI/>
          </WebUI>
        </WebUIComponent>
      </FormMetaData>
    </ParametersFormMetaData>
  </GlobalChangeSpec>